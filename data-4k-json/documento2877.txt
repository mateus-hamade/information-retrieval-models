Algoritmos e Estrutura de Dados Algoritmos , Algoritmos de Ordenação , Estrutura de Dados ( assuntos)

O seguinte trecho de código em Java foi copiado de uma classe que implementa um método de ordenação de vetores.  1.    for ( int i=0; i < n; i ++) { 2.            for (int j=1; j < (n-i) ; j ++) { 3.                   if (intArray[ j-1] > intArray[ j ] ) { 4.                        temp = intArray[ j-1] ; 5.                         intArray[ j-1] = intArray[ j ] ; 6.                         intArray[ j ] = temp ; 7.                   } 8.            } 9.    }  Para expressar propriedades desse código, na linguagem da lógica proposicional, considere as proposições lógicas p, q e r e as seguintes interpretações:  • p é verdadeiro se e somente se i = 0 • q é verdadeiro se e somente se j ≠ (n-i) • r é verdadeiro se e somente se intArray[j-1] > intArray[j]  Nesse contexto, os comandos de atribuição presentes neste trecho de código (linhas 4, 5 e 6) serão executados para:

Alternativas:
A. todos os valores das variáveis i, j, intArray[j-1] e intArray[j] que resultem em valores lógicos V, V e V respectivamente para p, q e r.
B. apenas alguns valores das variáveis i, j, intArray[j-1] e intArray[j] que resultem em valores lógicos V, V e V respectivamente para p, q e r.
C. apenas alguns valores das variáveis i, j, intArray[j-1] e intArray[j] que resultem em valores lógicos F, V e V respectivamente para p, q e r.
D. apenas alguns valores das variáveis i, j, intArray[j-1] e intArray[j] que resultem em valores lógicos V, F e V respectivamente para p, q e r.
E. apenas alguns valores das variáveis i, j, intArray[j-1] e intArray[j] que resultem em valores lógicos V, V e F respectivamente para p, q e r.