Algoritmos e Estrutura de Dados Algoritmos , Complexidade de Algoritmos

Para projetar algoritmos eficientes um desenvolvedor deve estar preocupado com a complexidade deste algoritmo, desde sua concepção.  Considere a seguinte função T(n) que mede os recursos (ex. tempo de execução) que um algoritmo necessita no pior caso para processar uma entrada qualquer de tamanho n:  T(n) = O(log(n))     Sabendo que O(log(n)) é a ordem da complexidade de tempo do algoritmo seguindo a notação "big O", é correto afirmar que este algoritmo tem complexidade de ordem:   

Alternativas:
A. constante;
B. sublinear;
C. linear;
D. polinomial;
E. exponencial.